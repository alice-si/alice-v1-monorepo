version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:10.15.3-stretch

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          # See https://circleci.com/docs/2.0/caching/
          name: collect-lock-files
          command: find . -name package-lock.json | xargs sha256sum >.circleci.depcache
      - restore_cache:
          key: npm-v1-{{ checksum ".circleci.depcache" }}
      - run:
          name: install
          command: npm install
      - run:
          name: lerna-bootstrap
          command: npx lerna bootstrap
      - save_cache:
          key: npm-v1-{{ checksum ".circleci.depcache" }}
          paths:
            - ./node_modules
            - ./packages/contracts/node_modules
            - ./packages/demo-app/node_modules
            - ./packages/jobs/node_modules
            - ./packages/models/node_modules
      - persist_to_workspace:
          root: .
          paths:
            '*'
  test:
    executor: node-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: test
          command: npx lerna run test --stream
  docker-build:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker images
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
            gcloud --quiet auth configure-docker

            TAG=$(date +'%Y%m%d')-$(echo $CIRCLE_SHA1 | cut -c 1-3)
            DEMO_APP_NAME="gcr.io/$GOOGLE_PROJECT_ID/alice-demo-app:$TAG"
            JOBS_NAME="gcr.io/$GOOGLE_PROJECT_ID/alice-jobs:$TAG"
            echo "Building version $TAG"

            docker build -t "alice-monorepo:$TAG" .
            docker build -t "$DEMO_APP_NAME" \
              -f packages/demo-app/Dockerfile \
              --build-arg VERSION=$TAG \
              .
            docker build -t "$JOBS_NAME" \
              -f packages/jobs/Dockerfile \
              --build-arg VERSION=$TAG \
              .
            docker push "$DEMO_APP_NAME"
            docker push "$JOBS_NAME"

workflows:
  version: 2
  main:
    jobs:
      - build
      - test:
          requires:
            - build
      - docker-build:
          requires:
            - build
          filters:
            branches:
              only: master
